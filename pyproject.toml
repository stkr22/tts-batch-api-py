[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "tts-batch-api"
dynamic = ["version"]
description = "The API offer simple text to speach functionality based on PIPER."
authors = [
    { name = "stkr22", email = "stkr22@github.com" }
]
readme = "README.md"
license = { text = "GNU General Public License v3.0" }

keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
]

requires-python = ">=3.12,<3.14"
dependencies = [
    "piper-tts~=1.3.0",
    "fastapi[standard]~=0.116.1",
    "uvicorn~=0.35.0",
    "numpy~=2.3.2",
    "onnxruntime~=1.22.1",
    "redis~=6.2.0",
]


[project.urls]
Homepage = "https://github.com/stkr22/tts-batch-api-py"
Repository = "https://github.com/stkr22/tts-batch-api-py"
Documentation = "https://github.com/stkr22/tts-batch-api-py/tree/main/docs"
Issues = "https://github.com/stkr22/tts-batch-api-py/issues"
Changelog = "https://github.com/stkr22/tts-batch-api-py/blob/main/CHANGELOG.md"


[dependency-groups]
dev = [
    "ruff~=0.12.5",
    "mypy~=1.17.0",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "httpx~=0.28.1",
    "pytest-xdist~=3.6.0",
    "coverage[toml]~=7.6.0",
    "commitizen~=4.8.3",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel.hooks.vcs]
version-file = "src/app/_version.py"

[tool.ruff]
target-version = "py313"
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # pylint
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q -n auto"

[tool.coverage.run]
source = ["app"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "scm"
update_changelog_on_bump = true
